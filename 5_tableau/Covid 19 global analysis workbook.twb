<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Book1_17541291183560' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Global mortality rate yearly trend' inline='true' name='federated.0phuocu0if383m1ekzx8c1yall8t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global mortality rate yearly trend' name='textscan.0zqpkp00zbjjyv1dwhgf21s1d38y'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Global mortality rate yearly trend.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0zqpkp00zbjjyv1dwhgf21s1d38y' name='Global mortality rate yearly trend.csv' table='[Global mortality rate yearly trend#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='max_total_deaths' ordinal='1' />
            <column datatype='integer' name='max_total_cases' ordinal='2' />
            <column datatype='real' name='mortality_rate_percentage' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global mortality rate yearly trend.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Global mortality rate yearly trend.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global mortality rate yearly trend.csv_B3C7668C24DE45D7B01683EE1D409D62]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_deaths]</local-name>
            <parent-name>[Global mortality rate yearly trend.csv]</parent-name>
            <remote-alias>max_total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global mortality rate yearly trend.csv_B3C7668C24DE45D7B01683EE1D409D62]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_cases]</local-name>
            <parent-name>[Global mortality rate yearly trend.csv]</parent-name>
            <remote-alias>max_total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global mortality rate yearly trend.csv_B3C7668C24DE45D7B01683EE1D409D62]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mortality_rate_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mortality_rate_percentage]</local-name>
            <parent-name>[Global mortality rate yearly trend.csv]</parent-name>
            <remote-alias>mortality_rate_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global mortality rate yearly trend.csv_B3C7668C24DE45D7B01683EE1D409D62]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Global mortality rate yearly trend.csv' datatype='table' name='[__tableau_internal_object_id__].[Global mortality rate yearly trend.csv_B3C7668C24DE45D7B01683EE1D409D62]' role='measure' type='quantitative' />
      <column caption='Max Total Cases' datatype='integer' name='[max_total_cases]' role='measure' type='quantitative' />
      <column caption='Max Total Deaths' datatype='integer' name='[max_total_deaths]' role='measure' type='quantitative' />
      <column caption='Mortality Rate Percentage' datatype='real' name='[mortality_rate_percentage]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_11otcfl06ukfdw157nx3616tiot8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 01:48:14 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Global mortality rate yearly trend.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[max_total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Global mortality rate yearly trend.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[max_total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_total_cases</remote-alias>
              <ordinal>2</ordinal>
              <family>Global mortality rate yearly trend.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mortality_rate_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mortality_rate_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mortality_rate_percentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Global mortality rate yearly trend.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Global mortality rate yearly trend.csv' id='Global mortality rate yearly trend.csv_B3C7668C24DE45D7B01683EE1D409D62'>
            <properties context=''>
              <relation connection='textscan.0zqpkp00zbjjyv1dwhgf21s1d38y' name='Global mortality rate yearly trend.csv' table='[Global mortality rate yearly trend#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='max_total_deaths' ordinal='1' />
                  <column datatype='integer' name='max_total_cases' ordinal='2' />
                  <column datatype='real' name='mortality_rate_percentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Mortality rate trend per country over time yearly' inline='true' name='federated.0tcq3zt0zw9hud1bz6ues0w7njlq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Mortality rate trend per country over time yearly' name='textscan.020n9ak13ynrrt150ofgn00x7tw4'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Mortality rate trend per country over time yearly.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.020n9ak13ynrrt150ofgn00x7tw4' name='Mortality rate trend per country over time yearly.csv' table='[Mortality rate trend per country over time yearly#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='integer' name='max_total_deaths' ordinal='2' />
            <column datatype='integer' name='max_total_cases' ordinal='3' />
            <column datatype='real' name='mortality_rate_percentage' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Mortality rate trend per country over time yearly.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Mortality rate trend per country over time yearly.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Mortality rate trend per country over time yearly.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_deaths]</local-name>
            <parent-name>[Mortality rate trend per country over time yearly.csv]</parent-name>
            <remote-alias>max_total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_cases]</local-name>
            <parent-name>[Mortality rate trend per country over time yearly.csv]</parent-name>
            <remote-alias>max_total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mortality_rate_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mortality_rate_percentage]</local-name>
            <parent-name>[Mortality rate trend per country over time yearly.csv]</parent-name>
            <remote-alias>mortality_rate_percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality rate trend per country over time yearly.csv' datatype='table' name='[__tableau_internal_object_id__].[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Max Total Cases' datatype='integer' name='[max_total_cases]' role='measure' type='quantitative' />
      <column caption='Max Total Deaths' datatype='integer' name='[max_total_deaths]' role='measure' type='quantitative' />
      <column caption='Mortality Rate Percentage' datatype='real' name='[mortality_rate_percentage]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_0a53c6s08v3rik1chze3r1wnrvdc.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:20:27 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Mortality rate trend per country over time yearly.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Mortality rate trend per country over time yearly.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[max_total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_total_deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>Mortality rate trend per country over time yearly.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>752</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[max_total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_total_cases</remote-alias>
              <ordinal>3</ordinal>
              <family>Mortality rate trend per country over time yearly.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>985</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mortality_rate_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mortality_rate_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mortality_rate_percentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Mortality rate trend per country over time yearly.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>335</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Mortality rate trend per country over time yearly.csv' id='Mortality rate trend per country over time yearly.csv_7C575A67DD1A4F24B5D01EB4CAFA1588'>
            <properties context=''>
              <relation connection='textscan.020n9ak13ynrrt150ofgn00x7tw4' name='Mortality rate trend per country over time yearly.csv' table='[Mortality rate trend per country over time yearly#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='integer' name='max_total_deaths' ordinal='2' />
                  <column datatype='integer' name='max_total_cases' ordinal='3' />
                  <column datatype='real' name='mortality_rate_percentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Vaccination progress per continent' inline='true' name='federated.0uerj1k1rlhtkb17k44p20j0jiwt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vaccination progress per continent' name='textscan.047f4gn1yghdi5174bm6p1buzeji'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Vaccination progress per continent.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.047f4gn1yghdi5174bm6p1buzeji' name='Vaccination progress per continent.csv' table='[Vaccination progress per continent#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='total_vaccinations' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Vaccination progress per continent.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Vaccination progress per continent.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Vaccination progress per continent.csv_5E059985C9824A6E999B8005108ACB98]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Vaccination progress per continent.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Vaccination progress per continent.csv_5E059985C9824A6E999B8005108ACB98]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Vaccination progress per continent.csv' datatype='table' name='[__tableau_internal_object_id__].[Vaccination progress per continent.csv_5E059985C9824A6E999B8005108ACB98]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_1k4ylg10acd2c51ce1oro0xc1j1q.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:33:59 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Vaccination progress per continent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Vaccination progress per continent.csv_5E059985C9824A6E999B8005108ACB98]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>1</ordinal>
              <family>Vaccination progress per continent.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Vaccination progress per continent.csv_5E059985C9824A6E999B8005108ACB98]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Vaccination progress per continent.csv' id='Vaccination progress per continent.csv_5E059985C9824A6E999B8005108ACB98'>
            <properties context=''>
              <relation connection='textscan.047f4gn1yghdi5174bm6p1buzeji' name='Vaccination progress per continent.csv' table='[Vaccination progress per continent#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='total_vaccinations' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='global KPI values' inline='true' name='federated.0uwykop1x55i491ercida06d0jnz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global KPI values' name='textscan.13l1v3a1vwldim1g2p32u1e3qv3z'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='global KPI values.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.13l1v3a1vwldim1g2p32u1e3qv3z' name='global KPI values.csv' table='[global KPI values#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='global_total_cases' ordinal='0' />
            <column datatype='integer' name='global_total_deaths' ordinal='1' />
            <column datatype='integer' name='global_total_vaccinations' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global KPI values.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_total_cases]</local-name>
            <parent-name>[global KPI values.csv]</parent-name>
            <remote-alias>global_total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[global KPI values.csv_A55900469E40407F850DD4E80EDFC117]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_total_deaths]</local-name>
            <parent-name>[global KPI values.csv]</parent-name>
            <remote-alias>global_total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[global KPI values.csv_A55900469E40407F850DD4E80EDFC117]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_total_vaccinations]</local-name>
            <parent-name>[global KPI values.csv]</parent-name>
            <remote-alias>global_total_vaccinations</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[global KPI values.csv_A55900469E40407F850DD4E80EDFC117]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='global KPI values.csv' datatype='table' name='[__tableau_internal_object_id__].[global KPI values.csv_A55900469E40407F850DD4E80EDFC117]' role='measure' type='quantitative' />
      <column caption='Global Total Cases' datatype='integer' name='[global_total_cases]' role='measure' type='quantitative' />
      <column caption='Global Total Deaths' datatype='integer' name='[global_total_deaths]' role='measure' type='quantitative' />
      <column caption='Global Total Vaccinations' datatype='integer' name='[global_total_vaccinations]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_1aqpniv0qcgym516gvkis151y1ws.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 03:07:56 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>global_total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>global KPI values.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>global KPI values.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_total_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_total_vaccinations</remote-alias>
              <ordinal>2</ordinal>
              <family>global KPI values.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='global KPI values.csv' id='global KPI values.csv_A55900469E40407F850DD4E80EDFC117'>
            <properties context=''>
              <relation connection='textscan.13l1v3a1vwldim1g2p32u1e3qv3z' name='global KPI values.csv' table='[global KPI values#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='global_total_cases' ordinal='0' />
                  <column datatype='integer' name='global_total_deaths' ordinal='1' />
                  <column datatype='integer' name='global_total_vaccinations' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Vaccinations over time' inline='true' name='federated.0v0rby21ylfry61dl4rjs01x2d29' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vaccinations over time' name='textscan.1wbtgkw1ydjzqa1ffs6co1yxbivn'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Vaccinations over time.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1wbtgkw1ydjzqa1ffs6co1yxbivn' name='Vaccinations over time.csv' table='[Vaccinations over time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='global_daily_new_vaccinations' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Vaccinations over time.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Vaccinations over time.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Vaccinations over time.csv_8D0CC868C53A4741B43C0061AA374A87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_daily_new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_daily_new_vaccinations]</local-name>
            <parent-name>[Vaccinations over time.csv]</parent-name>
            <remote-alias>global_daily_new_vaccinations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Vaccinations over time.csv_8D0CC868C53A4741B43C0061AA374A87]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Vaccinations over time.csv' datatype='table' name='[__tableau_internal_object_id__].[Vaccinations over time.csv_8D0CC868C53A4741B43C0061AA374A87]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Global Daily New Vaccinations' datatype='integer' name='[global_daily_new_vaccinations]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_1oec5ot0fp6zof1dyo5x00dhx48y.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:39:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Vaccinations over time.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1688</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_daily_new_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_daily_new_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_daily_new_vaccinations</remote-alias>
              <ordinal>1</ordinal>
              <family>Vaccinations over time.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1353</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Vaccinations over time.csv' id='Vaccinations over time.csv_8D0CC868C53A4741B43C0061AA374A87'>
            <properties context=''>
              <relation connection='textscan.1wbtgkw1ydjzqa1ffs6co1yxbivn' name='Vaccinations over time.csv' table='[Vaccinations over time#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='integer' name='global_daily_new_vaccinations' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Total cases &amp; deaths globally by date (time trend)' inline='true' name='federated.1d6vlvp0fdvlhd1chwpgx0zc9pit' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Total cases &amp; deaths globally by date (time trend)' name='textscan.01xtjto0lgkqzn1f4t6rf19d74ir'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Total cases &amp; deaths globally by date (time trend).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.01xtjto0lgkqzn1f4t6rf19d74ir' name='Total cases &amp; deaths globally by date (time trend).csv' table='[Total cases &amp; deaths globally by date (time trend)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='global_new_cases' ordinal='1' />
            <column datatype='integer' name='global_new_deaths' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total cases &amp; deaths globally by date (time trend).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Total cases &amp; deaths globally by date (time trend).csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_new_cases]</local-name>
            <parent-name>[Total cases &amp; deaths globally by date (time trend).csv]</parent-name>
            <remote-alias>global_new_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_new_deaths]</local-name>
            <parent-name>[Total cases &amp; deaths globally by date (time trend).csv]</parent-name>
            <remote-alias>global_new_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total cases &amp; deaths globally by date (time trend).csv' datatype='table' name='[__tableau_internal_object_id__].[Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Global New Cases' datatype='integer' name='[global_new_cases]' role='measure' type='quantitative' />
      <column caption='Global New Deaths' datatype='integer' name='[global_new_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_0w8e7nl1nzn6gl1cgprr811wmd2v.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:30:07 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Total cases &amp; deaths globally by date (time trend).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1688</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_new_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Total cases &amp; deaths globally by date (time trend).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>444</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_new_deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>Total cases &amp; deaths globally by date (time trend).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>342</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Total cases &amp; deaths globally by date (time trend).csv' id='Total cases &amp; deaths globally by date (time trend).csv_44CC83BBF54546078E8D333CFBBA21A0'>
            <properties context=''>
              <relation connection='textscan.01xtjto0lgkqzn1f4t6rf19d74ir' name='Total cases &amp; deaths globally by date (time trend).csv' table='[Total cases &amp; deaths globally by date (time trend)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='integer' name='global_new_cases' ordinal='1' />
                  <column datatype='integer' name='global_new_deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Top 10 countries by total cases (latest date)' inline='true' name='federated.1fu6thq1fxnotw1b9sndn17pi9cc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Top 10 countries by total cases (latest date)' name='textscan.010h6kq19655a01fbb6x61nrh29w'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Top 10 countries by total cases (latest date).csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.010h6kq19655a01fbb6x61nrh29w' name='Top 10 countries by total cases (latest date).csv' table='[Top 10 countries by total cases (latest date)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='integer' name='total_deaths' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top 10 countries by total cases (latest date).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Top 10 countries by total cases (latest date).csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Top 10 countries by total cases (latest date).csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Top 10 countries by total cases (latest date).csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top 10 countries by total cases (latest date).csv' datatype='table' name='[__tableau_internal_object_id__].[Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_0wpjoj916ug70315q1dxl01yyw8l.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:24:37 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Top 10 countries by total cases (latest date).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Top 10 countries by total cases (latest date).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>Top 10 countries by total cases (latest date).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Top 10 countries by total cases (latest date).csv' id='Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A'>
            <properties context=''>
              <relation connection='textscan.010h6kq19655a01fbb6x61nrh29w' name='Top 10 countries by total cases (latest date).csv' table='[Top 10 countries by total cases (latest date)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_cases' ordinal='1' />
                  <column datatype='integer' name='total_deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Map with total cases by country' inline='true' name='federated.1gxq2rk0jjeb9319rhrgk0azwh9l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Map with total cases by country' name='textscan.1at7vch0fnqysv1at1poq1dei1kv'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Map with total cases by country.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1at7vch0fnqysv1at1poq1dei1kv' name='Map with total cases by country.csv' table='[Map with total cases by country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Map with total cases by country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Map with total cases by country.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Map with total cases by country.csv_93C42CAFA1EC430893775964A73C72BA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Map with total cases by country.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Map with total cases by country.csv_93C42CAFA1EC430893775964A73C72BA]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Map with total cases by country.csv' datatype='table' name='[__tableau_internal_object_id__].[Map with total cases by country.csv_93C42CAFA1EC430893775964A73C72BA]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_1y3b7qm0x0e85h12j83751qf2gto.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:03:26 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Map with total cases by country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Map with total cases by country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Map with total cases by country.csv' id='Map with total cases by country.csv_93C42CAFA1EC430893775964A73C72BA'>
            <properties context=''>
              <relation connection='textscan.1at7vch0fnqysv1at1poq1dei1kv' name='Map with total cases by country.csv' table='[Map with total cases by country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_cases' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Global trend line' inline='true' name='federated.1lezdrv0ftd9fc15gnomk0rxbftp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global trend line' name='textscan.00grd2q18h0kiy15wsfsx0tdsb9m'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Global trend line.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.00grd2q18h0kiy15wsfsx0tdsb9m' name='Global trend line.csv' table='[Global trend line#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='global_new_cases' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global trend line.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Global trend line.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_new_cases]</local-name>
            <parent-name>[Global trend line.csv]</parent-name>
            <remote-alias>global_new_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Global trend line.csv' datatype='table' name='[__tableau_internal_object_id__].[Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Global New Cases' datatype='integer' name='[global_new_cases]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_1ftuypc1hbwwgt12647z50uqlh0a.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:00:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Global trend line.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1688</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_new_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Global trend line.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>444</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Global trend line.csv' id='Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599'>
            <properties context=''>
              <relation connection='textscan.00grd2q18h0kiy15wsfsx0tdsb9m' name='Global trend line.csv' table='[Global trend line#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='integer' name='global_new_cases' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Global daily new cases' inline='true' name='federated.1mvwf3s0kekn021g63ycx0s2l1r2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global daily new cases' name='textscan.1hwbq011detnri1be5x0o056c07y'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Global daily new cases.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1hwbq011detnri1be5x0o056c07y' name='Global daily new cases.csv' table='[Global daily new cases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='integer' name='global_new_cases' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global daily new cases.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Global daily new cases.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[global_new_cases]</local-name>
            <parent-name>[Global daily new cases.csv]</parent-name>
            <remote-alias>global_new_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Global daily new cases.csv' datatype='table' name='[__tableau_internal_object_id__].[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Global New Cases' datatype='integer' name='[global_new_cases]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[global_new_cases]' derivation='Sum' name='[sum:global_new_cases:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_1x16l9v1hkdnsl17cepc30btzjmo.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 01:47:38 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Global daily new cases.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1688</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[global_new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_new_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Global daily new cases.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>444</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[__tableau_internal_object_id__].[cnt:Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1mvwf3s0kekn021g63ycx0s2l1r2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[sum:global_new_cases:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Global daily new cases.csv' id='Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB'>
            <properties context=''>
              <relation connection='textscan.1hwbq011detnri1be5x0o056c07y' name='Global daily new cases.csv' table='[Global daily new cases#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='integer' name='global_new_cases' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Top countries by cases &amp; deaths' inline='true' name='federated.1slic1d1088qc711ca77u1rohnk0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Top countries by cases &amp; deaths' name='textscan.07x1t3t05tcfub19f9vw21fwlval'>
            <connection class='textscan' directory='F:/Projects/2_COVID-19 Global Analysis/5_tableau' filename='Top countries by cases &amp; deaths.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07x1t3t05tcfub19f9vw21fwlval' name='Top countries by cases &amp; deaths.csv' table='[Top countries by cases &amp; deaths#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='integer' name='total_deaths' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top countries by cases &amp; deaths.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Top countries by cases &amp; deaths.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Top countries by cases &amp; deaths.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Top countries by cases &amp; deaths.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top countries by cases &amp; deaths.csv' datatype='table' name='[__tableau_internal_object_id__].[Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/dheer/AppData/Local/Temp/TableauTemp/#TableauTemp_12rk4620zdj7by123hr3t1m1p2kh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/01/2025 02:27:09 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Top countries by cases &amp; deaths.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Top countries by cases &amp; deaths.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>Top countries by cases &amp; deaths.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Top countries by cases &amp; deaths.csv' id='Top countries by cases &amp; deaths.csv_82273AA3FA1C439294250683492BF94E'>
            <properties context=''>
              <relation connection='textscan.07x1t3t05tcfub19f9vw21fwlval' name='Top countries by cases &amp; deaths.csv' table='[Top countries by cases &amp; deaths#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_cases' ordinal='1' />
                  <column datatype='integer' name='total_deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' Top 10 Countries by Total Cases (Latest Date)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top 10 countries by total cases (latest date)' name='federated.1fu6thq1fxnotw1b9sndn17pi9cc' />
          </datasources>
          <datasource-dependencies datasource='federated.1fu6thq1fxnotw1b9sndn17pi9cc'>
            <column caption='Top 10 countries by total cases (latest date).csv' datatype='table' name='[__tableau_internal_object_id__].[Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Top 10 countries by total cases (latest date).csv_19ED587307104F9A84B94397C748367A:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fu6thq1fxnotw1b9sndn17pi9cc].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <manual-sort column='[federated.1fu6thq1fxnotw1b9sndn17pi9cc].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1fu6thq1fxnotw1b9sndn17pi9cc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1fu6thq1fxnotw1b9sndn17pi9cc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fu6thq1fxnotw1b9sndn17pi9cc].[none:location:nk]</rows>
        <cols>[federated.1fu6thq1fxnotw1b9sndn17pi9cc].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{534D8D80-C10B-43C5-9847-FB39C5933362}' />
    </worksheet>
    <worksheet name='Color-coded world map showing total cases per country (latest data).'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Color-coded world map showing total cases per country (latest data). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Map with total cases by country' name='federated.1gxq2rk0jjeb9319rhrgk0azwh9l' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gxq2rk0jjeb9319rhrgk0azwh9l'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Micronesia (country)&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[sum:total_cases:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#efe0e0</color>
                <color>#edd0d1</color>
                <color>#ecc0c1</color>
                <color>#eab1b1</color>
                <color>#e9a1a2</color>
                <color>#e79293</color>
                <color>#e58384</color>
                <color>#e47475</color>
                <color>#e26567</color>
                <color>#e15759</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f6eee3' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.74000000953674316' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[sum:total_cases:qk]' />
              <lod column='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[none:location:nk]' />
              <geometry column='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[Latitude (generated)]</rows>
        <cols>[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E2DF52B8-5921-4F6A-99F5-511A53961E1B}' />
    </worksheet>
    <worksheet name='Global Daily New Cases'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#000000' fontname='Aptos,sans-serif' fontsize='11'>Shows new cases globally day by day</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global daily new cases' name='federated.1mvwf3s0kekn021g63ycx0s2l1r2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mvwf3s0kekn021g63ycx0s2l1r2'>
            <column caption='Global daily new cases.csv' datatype='table' name='[__tableau_internal_object_id__].[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Global New Cases' datatype='integer' name='[global_new_cases]' role='measure' type='quantitative' />
            <column-instance column='[global_new_cases]' derivation='Sum' name='[sum:global_new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[yr:date:qk]' included-values='all' />
          <slices>
            <column>[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[:Measure Names]</column>
            <column>[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[yr:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[__tableau_internal_object_id__].[cnt:Global daily new cases.csv_F5471EC75069422D8ACF7F16DFC8B1DB:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[Multiple Values]</rows>
        <cols>[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[yr:date:qk]</cols>
      </table>
      <simple-id uuid='{D16701B8-D469-4E59-86D2-256C12D6EB8A}' />
    </worksheet>
    <worksheet name='Global Mortality Rate Yearly Trend'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#000000' fontname='Aptos,sans-serif' fontsize='11'>Year-over-year global mortality rate trend.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global mortality rate yearly trend' name='federated.0phuocu0if383m1ekzx8c1yall8t' />
          </datasources>
          <datasource-dependencies datasource='federated.0phuocu0if383m1ekzx8c1yall8t'>
            <column caption='Mortality Rate Percentage' datatype='real' name='[mortality_rate_percentage]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mortality_rate_percentage]' derivation='Sum' name='[sum:mortality_rate_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0phuocu0if383m1ekzx8c1yall8t].[sum:mortality_rate_percentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0phuocu0if383m1ekzx8c1yall8t].[sum:mortality_rate_percentage:qk]</rows>
        <cols>[federated.0phuocu0if383m1ekzx8c1yall8t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{A16AB70E-AD58-43DF-9CC7-A91C85752E5B}' />
    </worksheet>
    <worksheet name='Global Trend Line '>
      <table>
        <view>
          <datasources>
            <datasource caption='Global trend line' name='federated.1lezdrv0ftd9fc15gnomk0rxbftp' />
          </datasources>
          <datasource-dependencies datasource='federated.1lezdrv0ftd9fc15gnomk0rxbftp'>
            <column caption='Global trend line.csv' datatype='table' name='[__tableau_internal_object_id__].[Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Global trend line.csv_4F44A17F11824E9EBFFBE3527A9FF599:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Global New Cases' datatype='integer' name='[global_new_cases]' role='measure' type='quantitative' />
            <column-instance column='[global_new_cases]' derivation='Sum' name='[sum:global_new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lezdrv0ftd9fc15gnomk0rxbftp].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1lezdrv0ftd9fc15gnomk0rxbftp].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lezdrv0ftd9fc15gnomk0rxbftp].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lezdrv0ftd9fc15gnomk0rxbftp].[Multiple Values]</rows>
        <cols>[federated.1lezdrv0ftd9fc15gnomk0rxbftp].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{8E694579-45F8-4C42-93CF-2358CBDD75A8}' />
    </worksheet>
    <worksheet name='KPIs'>
      <table>
        <view>
          <datasources>
            <datasource caption='global KPI values' name='federated.0uwykop1x55i491ercida06d0jnz' />
          </datasources>
          <datasource-dependencies datasource='federated.0uwykop1x55i491ercida06d0jnz'>
            <column caption='Global Total Cases' datatype='integer' name='[global_total_cases]' role='measure' type='quantitative' />
            <column caption='Global Total Deaths' datatype='integer' name='[global_total_deaths]' role='measure' type='quantitative' />
            <column caption='Global Total Vaccinations' datatype='integer' name='[global_total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[global_total_cases]' derivation='Sum' name='[sum:global_total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[global_total_deaths]' derivation='Sum' name='[sum:global_total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[global_total_vaccinations]' derivation='Sum' name='[sum:global_total_vaccinations:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uwykop1x55i491ercida06d0jnz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0uwykop1x55i491ercida06d0jnz].[sum:global_total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0uwykop1x55i491ercida06d0jnz].[sum:global_total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0uwykop1x55i491ercida06d0jnz].[sum:global_total_vaccinations:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0uwykop1x55i491ercida06d0jnz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='196' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0uwykop1x55i491ercida06d0jnz].[:Measure Names]' value='200' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0uwykop1x55i491ercida06d0jnz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uwykop1x55i491ercida06d0jnz].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{6590AF40-7650-4A85-ACB5-6A4259BD519D}' />
    </worksheet>
    <worksheet name='Mortality Rate Trend per Country Over Time (Yearly)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Mortality rate trend per country over time yearly' name='federated.0tcq3zt0zw9hud1bz6ues0w7njlq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tcq3zt0zw9hud1bz6ues0w7njlq'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Mortality Rate Percentage' datatype='real' name='[mortality_rate_percentage]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mortality_rate_percentage]' derivation='Sum' name='[sum:mortality_rate_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:location:nk]' />
              <text column='[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[sum:mortality_rate_percentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[sum:mortality_rate_percentage:qk]</rows>
        <cols>[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{A14D2D7A-CD70-4E66-BA64-EDB79AD27274}' />
    </worksheet>
    <worksheet name='Top Countries by Cases &amp; Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top countries by cases &amp; deaths' name='federated.1slic1d1088qc711ca77u1rohnk0' />
          </datasources>
          <datasource-dependencies datasource='federated.1slic1d1088qc711ca77u1rohnk0'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1slic1d1088qc711ca77u1rohnk0].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1slic1d1088qc711ca77u1rohnk0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f9f9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1slic1d1088qc711ca77u1rohnk0].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1slic1d1088qc711ca77u1rohnk0].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1slic1d1088qc711ca77u1rohnk0].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1slic1d1088qc711ca77u1rohnk0].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1slic1d1088qc711ca77u1rohnk0].[none:location:nk]</rows>
        <cols>([federated.1slic1d1088qc711ca77u1rohnk0].[sum:total_cases:qk] + [federated.1slic1d1088qc711ca77u1rohnk0].[sum:total_deaths:qk])</cols>
      </table>
      <simple-id uuid='{220CF82A-4537-4349-AD3B-C7F845C92ECC}' />
    </worksheet>
    <worksheet name='Total Cases &amp; Deaths Globally by Date (Time Trend)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Total cases &amp; deaths globally by date (time trend)' name='federated.1d6vlvp0fdvlhd1chwpgx0zc9pit' />
          </datasources>
          <datasource-dependencies datasource='federated.1d6vlvp0fdvlhd1chwpgx0zc9pit'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Global New Cases' datatype='integer' name='[global_new_cases]' role='measure' type='quantitative' />
            <column caption='Global New Deaths' datatype='integer' name='[global_new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[global_new_cases]' derivation='Sum' name='[sum:global_new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[global_new_deaths]' derivation='Sum' name='[sum:global_new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[sum:global_new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[sum:global_new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[sum:global_new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[sum:global_new_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[sum:global_new_cases:qk] + [federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[sum:global_new_deaths:qk])</rows>
        <cols>[federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[yr:date:qk]</cols>
      </table>
      <simple-id uuid='{E665CA74-E075-4999-BE32-EBEC3FA95F6A}' />
    </worksheet>
    <worksheet name='Vaccination Progress per Continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Vaccination progress per continent' name='federated.0uerj1k1rlhtkb17k44p20j0jiwt' />
          </datasources>
          <datasource-dependencies datasource='federated.0uerj1k1rlhtkb17k44p20j0jiwt'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <manual-sort column='[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#f5f1f0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f6eee3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[none:continent:nk]</rows>
        <cols>[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[sum:total_vaccinations:qk]</cols>
      </table>
      <simple-id uuid='{B54D6000-C4A0-44BB-9F17-3C7B58457075}' />
    </worksheet>
    <worksheet name='Vaccinations Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Vaccinations over time' name='federated.0v0rby21ylfry61dl4rjs01x2d29' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0rby21ylfry61dl4rjs01x2d29'>
            <column caption='Vaccinations over time.csv' datatype='table' name='[__tableau_internal_object_id__].[Vaccinations over time.csv_8D0CC868C53A4741B43C0061AA374A87]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Vaccinations over time.csv_8D0CC868C53A4741B43C0061AA374A87]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Vaccinations over time.csv_8D0CC868C53A4741B43C0061AA374A87:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Global Daily New Vaccinations' datatype='integer' name='[global_daily_new_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[global_daily_new_vaccinations]' derivation='Sum' name='[sum:global_daily_new_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v0rby21ylfry61dl4rjs01x2d29].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0v0rby21ylfry61dl4rjs01x2d29].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0rby21ylfry61dl4rjs01x2d29].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v0rby21ylfry61dl4rjs01x2d29].[Multiple Values]</rows>
        <cols>[federated.0v0rby21ylfry61dl4rjs01x2d29].[yr:date:qk]</cols>
      </table>
      <simple-id uuid='{8CA2D1FD-57BF-4CB1-A0CE-F1ADE4003715}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Global daily new cases' name='federated.1mvwf3s0kekn021g63ycx0s2l1r2' />
      </datasources>
      <datasource-dependencies datasource='federated.1mvwf3s0kekn021g63ycx0s2l1r2'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98028' id='5' param='horz' type-v2='layout-flow' w='99034' x='483' y='986'>
            <zone h='98028' id='3' type-v2='layout-basic' w='89378' x='483' y='986'>
              <zone h='24507' id='1' name='Global Daily New Cases' w='44689' x='483' y='25493'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49014' id='7' name=' Top 10 Countries by Total Cases (Latest Date)' w='22345' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49014' id='8' name='Color-coded world map showing total cases per country (latest data).' w='44689' x='45172' y='986'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49014' id='10' name='Vaccinations Over Time' w='44689' x='45172' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49014' id='11' name='Global Mortality Rate Yearly Trend' w='22344' x='22828' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24507' id='12' name='KPIs' w='44689' x='483' y='986'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98028' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='986'>
              <zone h='9001' id='6' name='Global Daily New Cases' param='[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='986'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9001' id='9' name='Color-coded world map showing total cases per country (latest data).' pane-specification-id='0' param='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[sum:total_cases:qk]' type-v2='color' w='9656' x='89861' y='9987'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98028' id='17' param='vert' type-v2='layout-flow' w='99034' x='483' y='986'>
                <zone fixed-size='188' h='24507' id='12' is-fixed='true' name='KPIs' w='44689' x='483' y='986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49014' id='8' is-fixed='true' name='Color-coded world map showing total cases per country (latest data).' w='44689' x='45172' y='986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9001' id='9' name='Color-coded world map showing total cases per country (latest data).' pane-specification-id='0' param='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[sum:total_cases:qk]' type-v2='color' w='9656' x='89861' y='9987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9001' id='6' name='Global Daily New Cases' param='[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9656' x='89861' y='986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24507' id='1' is-fixed='true' name='Global Daily New Cases' w='44689' x='483' y='25493'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49014' id='7' is-fixed='true' name=' Top 10 Countries by Total Cases (Latest Date)' w='22345' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49014' id='11' is-fixed='true' name='Global Mortality Rate Yearly Trend' w='22344' x='22828' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49014' id='10' is-fixed='true' name='Vaccinations Over Time' w='44689' x='45172' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{17EB3528-320D-45A0-BDA1-E098CC9142E3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='297'>
    <window class='worksheet' name='Global Daily New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[:Measure Names]</field>
            <field>[federated.1mvwf3s0kekn021g63ycx0s2l1r2].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCA23E0C-7A73-4F27-9F3D-BD1A5FD7D5D0}' />
    </window>
    <window class='worksheet' name='Global Mortality Rate Yearly Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0phuocu0if383m1ekzx8c1yall8t].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D19EDE06-4B84-46CE-B363-AD6D3D447162}' />
    </window>
    <window class='worksheet' name='Global Trend Line '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lezdrv0ftd9fc15gnomk0rxbftp].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6AB7624A-8D44-4F89-B862-33B5684572B3}' />
    </window>
    <window class='worksheet' name='Color-coded world map showing total cases per country (latest data).'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[__tableau_internal_object_id__].[cnt:Map with total cases by country.csv_93C42CAFA1EC430893775964A73C72BA:qk]</field>
            <field>[federated.1gxq2rk0jjeb9319rhrgk0azwh9l].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9849D15F-EB0F-4F62-A6FF-AB3052DB2003}' />
    </window>
    <window class='worksheet' name='Mortality Rate Trend per Country Over Time (Yearly)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:location:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:location:nk]</field>
            <field>[federated.0tcq3zt0zw9hud1bz6ues0w7njlq].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1A167B9-9D06-4BD2-B627-06C2E53BC3E3}' />
    </window>
    <window class='worksheet' name=' Top 10 Countries by Total Cases (Latest Date)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fu6thq1fxnotw1b9sndn17pi9cc].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48C05E17-29FD-4B61-A0E7-156113865F90}' />
    </window>
    <window class='worksheet' name='Top Countries by Cases &amp; Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1slic1d1088qc711ca77u1rohnk0].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F402AD53-F27D-4056-9CD2-6B679739A157}' />
    </window>
    <window class='worksheet' name='Total Cases &amp; Deaths Globally by Date (Time Trend)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0phuocu0if383m1ekzx8c1yall8t].[none:year:qk]</field>
            <field>[federated.1d6vlvp0fdvlhd1chwpgx0zc9pit].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE52BA71-F8C2-4F44-8753-10214593C630}' />
    </window>
    <window class='worksheet' name='Vaccination Progress per Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[none:continent:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uerj1k1rlhtkb17k44p20j0jiwt].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB83007D-A7EB-4B72-91A5-2636AD8EDC0E}' />
    </window>
    <window class='worksheet' name='Vaccinations Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0rby21ylfry61dl4rjs01x2d29].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09C2C582-9AF4-4E53-8B6E-ABB4F6756EA9}' />
    </window>
    <window class='worksheet' name='KPIs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BD6F6F42-CC7B-4FBB-A02B-DE36C7CD1B1F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' Top 10 Countries by Total Cases (Latest Date)' />
        <viewpoint name='Color-coded world map showing total cases per country (latest data).'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Daily New Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Mortality Rate Yearly Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPIs' />
        <viewpoint name='Vaccinations Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{27A5A712-0FC5-4207-A0D2-CF516856F1C1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Top 10 Countries by Total Cases (Latest Date)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aWxc6Zrf9ztr7VVcqljcKW6iqIXUrt77dt/F03ebO7kT2xjYQL4kCIIg
      QRLE+eIPjWBsB4MYhuExECM2MJlk7Azgscf23ef27emW1BK1UiLFTdzX4lKsfT2bPxS1q3VF
      iWSJxfNrdLdwdPi+5xye/3me932f93kEy7IsbGwOKGK5L8DGppzID/5gGgaGrpXzWmxs9pyH
      AjB0jWwyUc5rsbHZc2wXyOZAYwvA5kBjC8DmQGMLwOZAYwvA5kBjC8DmQGMLwOZAYwvA5kBj
      C8DmQGMLwOZAYwvA5kBjC8DmQGMLwOZAYwvA5kBjC2A3EISD2XfpAsrU7av1awtgFxAlGUGU
      ytK3ICtl6bfUuQhSee4bUXolEci//RSbV2F2LUU6W9jzfgVZxtL1Pe8XQBAEEEQs09j7viUJ
      yzRhm1vc97EALHTdQJQkxLKb/Wf5119MMjofLfdl2PwWdsgFyjI0cJNo8dGR5fuDTETSX/8j
      +QQDV26yUSjtQ07HouS39eHIM3LzDivJ/KNDZpGl+3f5xc9/wr/7Dz/l11fusJopAgbJaJzi
      17b1iEw8SnbvP2A2ZWKHBKCzvhJ54gVOx9bYTL/glVM9HDt+hIBSMkJTd66xtk2PwdD1Jyye
      lZjn+nSOMx98hx9+95v0NQewTAvIMTZwl82XaHP+7jWWctu7Dpv9y+67QPk4t0anMPJp5pc2
      EHz1vP3uBRrkDCPTS5zoOcTy3H1G55ZxWpdZ9PvoOdqHFBtn4PYEaV2gpvkIF/o6cMsmkZkx
      7ozNkTV0kmmVbxx71JVlaBQFCVkASXZQ13II9AKzY8OML8+xdukyNc4qjvYdQ4pO8NXgBOmi
      hTfYxrlT3eQjU4zMLoN2mVWvg+7jZ/HmZ7lybYhEAQKNXZzr68ZHmju3bjGzlkZyBzhx6jwd
      IdeuP0qbnWf3BaAXiKxG6Tn9Dmfe8jAzdJHlSIqGBo3l1Q16D3fT1HmUroUFqk6do9UtICtp
      BgZnOfTWt+iuEhm7eomJ9XpOuFa5OZ3h3AffIegucvPinSdMmFhziP7a21z8zV/hqmmi/8RR
      Ql6V5s4jdN7P0XL+HGEEZAWKvjre+2Ynbtlg4tpVpqNZTrX2cLh5FunkOTq9IMtZ7l4ap+7M
      x3wcdDAzeIXRpSDHxHkWhRZ++LtdmIU0meKbNwaxeTn2ZBCs+EM0VrsRBQHV5UB6YqQuIMsy
      iiyhqiqqCmTmWcyq1GbWmc8Aksbyepp6YZmqzhOEvAoCOrIsPTnrLLo4fOoCbb05NpanuPJX
      v+Lwux/RG5aRJQlFVVEBsNDyGeamp4mlciQja3iDvUiygixLyKqKQwVyq8xlJI7ko8wvgmYa
      rG6kOHe8Ec/EEAODReqqq2loDO/FY7TZBXZoDOBAUXT0x8YAhmGgKq84Jy3LSFqRXKFIsVBE
      ru3iZGsAARPTevFSiyBKON1emrv6eK/Xz2wk9ZyzUgxdH0UOd3Lu7Fn6u5pxPO9TIElImvbw
      OsRAM6c665A8DXzjmx/QHXQRWx7j5tDCSw2wbd48dsgCqDSEPdy/dw+1PYSZW2N6082Zk14w
      si/VgsNpsTS3hDPowFfVQGfjPTJFhXDIiZZLYSFR29xIbOAeU65u3GaKtUSG2sfayG0sML6e
      pdrrQURnebVIuNMFOHF70sxNriAEVAI1EpYuYpoFYtEkS6tRip5OANxekZnpRfz1Kt6qEIdb
      RVayMvUNLox8GhORbDLKRjyLw+WjLlTF7FoRc2cepM0eI3366aefApiGjlZ41YUbAV91DUZi
      nY1khkSySHvfKZr8CgIiisNJldeDKAqIoozb48PjUlAcLmqq/EiigNvnIbG2Rrqg4a0K0xCu
      IrUeIZ5Ok8xCKBzEG6ihWs6wvBYjkyvgq22ksa4ah1wyZJIskd6IsLy+SSyZxdvYxbGWIJIo
      4Qu4iK6skikY+GobCfp0IqubZLMFvMEmGsO1+JwK7kCA9NoKyWwed1UDjQ1BchtLbKYyJDMG
      VcEgPlljZWWFWDpDtiDRdayHgPrImAqixMV7K2wk7OmkNx3hQXZorZB//dSIloVpWSAICAjb
      XJm2sCwLC+HhwpZllY4JgviwLcuywLKwBOH5C2CWhYWFZQkIovDIXXpwfKv9B+0gCKUVzCeu
      Ayz4rddROvb0z4MoK/zJr8eYjcS38wB2BkEEq0z26NHDKU/fFmz95+V/bEcFYAOUBGCZZnlC
      AhQVSyvTiEQQQRTBKEMohiSDaWxbfHYwnM2BxhaAzYFmHwfDvR6WZWJZAqK4O4tYf/zTYSaX
      YrvS9gsRhPL44KXOt/5fjv6FV+r3QAjA0rPMjI8xu5Yh0NjGsa5WjOQiK9kqupr8T5ybjy0x
      uynT2RnmdSLrk1mNaGrvw6FttkfFu0BGIcH1L79gXvPT13eMoJolmYVCep1I9NlpSlFx4Har
      5drXZLPHVLwFSESmiTkP8Y0TnTgkgWBtDQCbcdAym9y9PkkkZdFx4hRdIQ8IIoqiIGKS2IyR
      L6SYnZwlhZvjp85Q7xUppNYZGZ0kljWpauqkr7uh8h9khVLxFiC5HsHf0IoqPfVN1wssr6xT
      1drDqQ4vd26Okweym7MMT65joLN8/xZXRzZpO9rHkSaFkcH75DHJFQzqWro51XcEZe0ON2cz
      Zbk3m9en4gVgmiaK8hyXRnbQ1tVDazhI6FATNaaJBmAZGEZpIcmUAxw/3kV9bQ21wTAOK4+J
      RFVNECdZFpciZC2T+GZyj+/KZqeoeAG43G4SsU2MHZqYsPQCw9cvMbqmEw6Hqav12+7PPqbi
      BeBvaCM3d4+1TGl11NCz5F9jodTUiySLAt0dh6gL1eDAxN5BuX+p+I+Xu7qVC8fSXPn1T8mb
      oLiquPD+R3gUNx7Xg9uX8fpdSACKG59HRUDA6XLjkEtpPkRJweNxIasO6nwi17/6EkU0cXpk
      /NVlTEVi81ocmFggyzQoagayqiC9dhYJE62ogygjy+Iz4wtRVvgHf37TzgqxDzgwAthLRFlh
      I5GlsJXxYi8RFAVL2/t+gVIgnCCAUQan8BWD4SreBSoXtT4nlmfvXSM7GtSOBrWxeWlsC7BL
      fHlvhfX43i+QCZKEVQ4XhAepEYVSisK97lsUH21y2gYVJACLYj5HvqhvxQQKqE4XTlUuS1zP
      pZGIPQjeB1SQAIpM3xtktSjjcSggyoSa2mkJee3ANpuvpYIEYJIviLT1HKWlqpSlTRBEMA2K
      uokoGKSzOl6vC7OYI50rYiHi9vlwKRKmqaMVdYqFPHnNwOn143MqYFnoxTypTA5LVPD6PKii
      RTadJls0UBxu/F6nLbJ9SgUJAEBAFEWkx3LUZ+NrTEwtkysk2bRqeb+/g+jcGHObeTAKaGoT
      7759BCs1y5dfzOILusjnkuRo4pvf7EMpxBm8PkjKVJAEFx0nj+BPL3JtZAlZVRFMi5a+83TW
      OMp43zavSmUJwCoSi26gak4QRLy+KjByTAyPc+j9j/i4pQ6nJODoPEbdIQNDyzN0ZYDV3BFq
      TR3FU8+pc724pQwDP7tNEhBnhkgFjvDesTCyaWBYRQaHlmk5cpruBh+p9VGu352i8cOjuGwz
      sO+oLAGYGvHoBkJeBVFBUL14kGjoPs6J9gZcAuiFNFNjo2RNCcuCeLZA2AQEAafLhapICEhI
      YmmDXXQtSvDYB6gSIIlY+TzpxAapxWkyGyKGlsHEhaaDy46I2HdUlgAkD+2Hj9Ba7X54KB0V
      kKRH+XyymRXWEk7OvN2LSzAZjq+8sEmf38NcPIVZ60WkNN3mdPvx1DXSUuMEy0KQHXgq60ke
      GA7cr00WVYqpGcbHBSjkWI0X6HnB+cHOo0xcucrVVBhVt6jv6aS9McTtmXG0dA1mPo8r1EaP
      z02ZqmPZvAYVFAtkkk3nkJ0uVPnRArehF8kVDNweFyJgGTqJ2AbpoomkuHArAg5fFYqVJ5cX
      8HgdCBhkElnUgA/ZMsmmNomniiAqVAercYkm8ViMdF5HlGW8/hr8buXhTJAdDLd/qCABvDmI
      ssJv7iyyuvmCElG7RDlXgtlaCWYfrQTbAtgF7NSIdjCcjc2+4MANgveKRLZIsViG/QCygaWX
      aT+AICKIQllcMEGSSxb34AbDvVn885/eswfB+4A3XgCmoZFcX2BwaJyNjEltSwcnj3RR5VHs
      +Bub1+aNF0B0fpgrE2nOnP+Q93wSG8uLxJJpAp5qWwA2r80bLoA8MxNLHD77HRqrS8mt6ltL
      tbywLAqpCAMDt1hLWzT1nuJMdyNWPk4kmkUlzu2ZHO+d7iG6vkR8bY37i2t4woc5EtQYHp/D
      8LXy0TsnqXboTN8bZGhqDcvpo7f/DF31PnLrSywk0kTnplhImnSfuMCJVg+zMws0th/G5xDR
      C0lm5jZo7ujA9YY/TZtnecNngeIksrWEa1WMfIaJ4Ztcu3WX+Y00hpbi1s1hQic+5Pd/9DvU
      JEe5O5+kkI1x9+pFbs7lOXXyGF7ZYG5qGqmxj9//8Q+oit5iSm/hk+9/j15HnsVUGkwTb+NR
      vv/DH/LJOz0sjNwhljPJRhcZmYtz7L2/wY+/8w6ZpRFSmkx2Y4nZ9dKUcXZtgumoiGy//PuS
      N1wAApgGplWaW68J1ePQ1rg/v0k+myVliHgoEI0lkX1eEpF1dEANNPP2+X4aAq5SbWJfLY21
      XkTBgc/vIlxXhypLOFS1lE5fVHGYKYZuX+Pa4ATRXBFDNwGFps52qp0ykqzgdMggqnS1BJmZ
      X8WwCsxPbtDc0/xaqdRtyscb/t0KEPAk2Ihr1FSrBMNN6Il5oqnSVFcxG2dhcQGnDOChoyOI
      SAJfdTWe5xb+fT6ZxRG+nC5y4fRxfGS5NTzxgrMFfM0d1N27xP1FiQWhmW/WvOGP0eZrecMt
      gJPWzlpGr99mI54inc6QK2gIoojqclHjq6K6oZXenh6621sIOF9tZiify+GpDeFVBIr5DPHU
      bylvKnk53FvFtc/vEWip26o+b7MfeeM/XeHOM5yzhrh59TJFC5zuGo72h5AdDs6e7uXa4B3W
      RRXNkjh8vJ86l4+GsPooMlNSqa8P45JL0qht7gI3gIg/HMblUqk91I3vxj2u31rEwkFzezsu
      VUSoDlGvlEKrBUklXN+wZW0EvOEeaqrWaAtW7f1Dsdkx9k0skGUaGBZIovhEXV7LMjEMC1ES
      n183+GXbt0wM03qm/eecia4Via/eZ2hB4q3zR3A9VXtAlBX+yV/e4f7i5itfzytT1hphvGqp
      rh3o99Xue98I4M3BYG1ujJGZNEffOk+d81mx2MFw+ycYzhbALmALYP8I4A0fBNvY7C5v/CD4
      zcba+uAIPD1s+LMv7jO3uvcWVRBELGvvN6Rs9b7liu/9IKB03xbbHYBUtAD0XIKl1U0000IQ
      JPy1YWp9jtcaLGMZRFcimIEgIY/IytQsjpZuap9KCzS3lmZ0If56N2Cz61S0C1RYm2QkkkUU
      RcxCgluXLjK+/prbFC2LYi5HQTcAjcWxUdbL5HLbvD4VbQEsQ8NR1U7HoVJt4JD0FZcXE/TW
      +cjEo4geL4nlJYruOhp8Fgtz8yTyJp6aetobgyhGlsXVDQpayaVw+Kqpr/Xjqa1FcqqA/ebv
      dyraAgAYWpF8oUA2HWN6JUdD0AvA0r3rXL1xk7vzmwiigJaKkcaB3+dmY3KIkZUt/10QEASL
      1Nokw1NRDFNjZmyEpXi2jHdls1NUtAUAWB67zq8XZbSChr++gxO1pZXdbHKTdOgw3z7fjlMS
      sEwnHXKUjUSWgLPIfDRPf3MVzc1uctEZJu+7OfONThxCHq1YRDXLuNhks2NUvABaTrzLx0eq
      0YsFopO3uTqyyA/PdaC6A/T0lF5+sIiMDTCS8tEa8gICwlZUkZFPMTQ6z6G+s4RUsGuiVhYV
      7wKVEJAUFadDIJ9/8AY/HjqRZWEmy+HTJ+hqbyNc5UYUADPPzNgQVvAoHWFvma7dZjepbAsg
      SCzc+Wv+YlzG1HUsR4DT508AIEpS6SUHwEldncXVX39OjUNHy2UQWgWSyxNcujGKWhtlcRx8
      4U7e6e/cyjVa+mHpiXZs9ht2KMQDLAtNK2AICk7l9bJ82qkR9w+2AHYBUVa4vxQjlcnved+C
      rJQvL9BWJG358gKZsM1VcFsAu4AdDLd/guEqewxQRnTTxNTLkCRWMLHK0C9QmlIxAaMc/Zul
      fg+SACzTwEREegNHoX/0F3fsMcA+YA8EYGGZGrP3bjE0s4ZS1cjx40dpqnZtMyjNwjQtBEF4
      OAMTmxljPXCInqDnuT9RjK8QMatprXFiWSbJyBxRMUhH2LcD92VTCez+OoClMXn1C6asRr7z
      3e/yzpEQK4vL6MZ2V1JzDH51neXUo4FlIZ0gWfh6f7O4OcfkWilkIbc5z+WhBbxe56vchU2F
      sgcWoEg0LtHRF8YhSTjq2jhfB2BhGTmGBy4zGklRd6if8/3tuMw8ixtJwqEQqiyS3lwmpvtw
      5iaZmJthRSsy4/TTc+ooYJGLLXFp9CKLGZn+s+/Q0+h/Zl7eMrNM3B0j3PM2tW4FyzJYmxrk
      yt15hKoG3r5wjpBbILm6hub1kFscZyJXy8cn24jO3uHynXkEbz3vvHeOWodAPr7MjZtDrGUM
      QoeO8VZfG+rrhFjblI3dtwCCm57eKu5evMTAnVGWNlLoFqDnGLx0kVzDaX7/v/hd2sRFvro9
      hV7IMDm7SEEvWYjU+iyTizH8je20NTbRc+w4p/t7qFZloMj6Wo5j733CD97tYW78HpmnZgBj
      y9Nc/fxLNkInON0WQBIMouM3uL7m5nd+9Ht8fLSagctXiRd0NhemuHLlC0bjbk73NJJeHOar
      Gfj2D3+Xb52uY/DKDZKagSY46Hv7Y378g+/QrI1xZSK564/RZnfYg1AIker2U3x89gh+qcDw
      tS+4fG+efCbBiuGltzGAiEhjWyd6Jkrxa2YwZEXFoai4nE7cbieyKAAOWnu6qHZKqA4vPo/8
      zCSAqRdIpfMoilLaLGQUmVvN0d3VjFMEb7CZkFMnkckDBs6abj44f5Rqt8jKcoK6lhBWLoMp
      ehHMJKmMjs/nI7c+w5WBm8zG8uQydmTofmWPZoEE/KEmjoaaONLRxE8vjZIJdSArMtKW6yBL
      ErIk7nhGj9rWXj7uOMIXv7rOvar3OBoUMSUFh1TSviCKW+KwABf1LXU4tz4LpllgZfo+RrQU
      QeqsbcEva9y8fJli6AQn+1vIrIkMlSH7ic3OsPsWQM+xtLhCVjOxLIuiVsBCQvH68OVjzCXy
      WJZFLLaKKbhQFJFCoYBhmliWQSqeRNu6VMXIkygaWJa1vX2nai1nznUxd+c20bxIg89iYjGK
      aVkUMyk2MwU8zqf2NCJRVxtADTRy/sJ53rlwjv6uJlTBpCA46Giux+VUyKXSlGnd1WYH2H0L
      IMoo+Qg//09X0E2QXAFOnnsLn8fDhXdP8eWliywoCprp4dzbZ3G4LPrqZC5d/ALJNHEE/NSH
      3Ag46e0/xG+uXmZO9HL83bN4A7XUbJVnF2UHtTU1PFYhFdlTS52jlLjQG+7g7cM5pldSnO47
      S+raFX7+2TSirtHW/za1XgWrphrJ8SDNrUhNdz9H7wzw018s4BCLOILdvHXiEIfqvNy68gUi
      Fv5QgMYqe2Zpv7JnoRCWaaIbBqIkP7FwZZoGhmE+ddxC13QQpVLk5WPtmIaOYQnIkvRMJoZt
      XY9lYugGiCXX6wUnYhgGliA+dp6FoZeOPX19YAfD7SfsWKBdQJQVTNMoT1CY4sDSCnveLwCi
      tBUMt/exQIKslJ73NoPh9nUoxJuMwFbR6L3uV6As/T5+AS/OrbqrXcM284MfkB1hNjbPx7YA
      u8RfDsyytL73C2SCKJUlDLvUuQAI23ZDdqZvcWsq+wBFg74Upk4yncXl8aK8aLC7w4zMx+xB
      8D6g8l0gLcud4XsksvZsvc2zVL4FsCxyuTyGaYGps7keIZrMIzo8NNSHcasChUyWnJYluh7D
      VL00NTbgVkDPp1lZ3SBXtHBXBWkM+RFMg2w2TTGfY30zieSqprU5hGLHwu1LKt8CPE4uweJG
      jGyhwGZkiptDM+RNk7Wpu1wZmiadLxBdHOHqnVkKpkkitk40nqaQzzB1d4CJ9SKmlmfw8q+5
      MblCLpdjceQa43Zy0H1L5VuAx3HX0NvhIJZMk09LjC1GyBXb0AoSTYe7OFFXg5lv4eK128Qz
      zdSFW3G4kyQzeVRzg8WlTbp9HmRfiL7j/dR5BNLuBDfiBaizS+XtRw6UAPLRWQZGV6kOViMU
      0miG9XDSQBRLue0lUQbLQi/mmJ0fZzHnIOhVyWSLsBXxIAgCoigiCKX5fjtJ4v6l4gWg6wVA
      QpJgeTyCr7OH4w3VaMkI0dT0M+fnswmKpoIqGMzFchzuP02dF9anYwzbYf8VR8UKYHXiBiMb
      RfKbG6iNJ/C5VOSgk9u3bpKpcZLJaBTFB25LhuErX7Fe7SWVSNN09G2qfE5cVpob167ikTQ0
      I4VY017We7LZeSo2FsjQ8mRyRQRZxe10IIoCmCbFQo6CAQ5VRZJEJNFi5sZNko2tdPh8KA4H
      DlUuZfgwNXK5IpYol44JIqIoYJomolgKxnteZgo7GG7/ULEWQFKc+JWnwpRFEYfLw5OR/zog
      IKtO/P4nE+CKkorH++zgVpIepU4URInnJVL83tlW3ukJverlvzKCJJclGA1KYyMEoZShba/7
      liQwzW3XJ6tYC/DyWJiGWQpt3qH8QnZmODsz3D5CQJReLxmuzf7FFsAuMbOaJJ3d+7j8sibH
      FcRSQFw5gvG2XKB9bwEs00Q3TWRJ3ruwdsugqIP6mmnRH+fffDllD4L3AS8MhcjM3+ba7ONl
      RTe4fnGEFxUa3Vwe5drdeQwLKCRZT23PH83F1rg5NELhsXFUbmWEoeUcAJZeYGr4JhORNMRm
      +ezqOK+dhDy3xGcDk6/bis0+5IUC0FNrRJKPv8B5Vhc3X1gc1B88xNGucKnhjXGuTm1vYG2Z
      FsZT2YX19CYb6ZJZj69MMLpm0VDjAl8DZ4+38dpBCJaJXpaMxjbl5pVdoGhkgqnZOMnNCOuZ
      PM1HP+TtY2GS0UWWMz7a6wTGhqdYTGzyRdpDVfNR+pudDN24yv1IEtFVw9G+frrq/Zi5GHcH
      7zC3kcIwRJx1zc/ts5haZnB0g7633serSJBY4PaCxDdOtJCIjDE8nSKfjLCeLNBw/D3eP1qP
      nt7g3tAws+spJEVFqe3gk/Pd6Pk4Y3fvMhlJIAhFYnI3ANnNBa7fuMtaWsNV08iZ0/00+GF8
      4DZrFFhbWAdfiPagg9m5JYqSn3c//pgWnz2Q3o+8sgDymRjRrIsPvv093EKU3/xsktSxMPl0
      nPW4yJGOQ5w4coiF9Vbe6gsiijLJ+QHmOcQnP2hHiM/z+fAEzTXHWLg7RDHUy/ffCpNfX+D2
      /LOZpuaGLrExWKDtwoe0+OXSzs98goWN0ve/kNlksxDgo48/wW2t8IvPlskfDRMZvUbU2cd3
      v9eIvD7Mvx4uDUxXpwZZUzr5ne81oaZn+I+3CkCG8RsjBE58yHthF9HxAa6OLfLD8/XEV6NU
      vfsh75yWuPabX5J2neWHP7pAYvQ33I3kaPHZRfT2I68eDi06CNeHcCkSguzEIZtPBIUJooQq
      S0iygkNVUWSDlYU4DrdBZHGelXgGLZUmlY6zoLk42hJEEQVEUUF6zuA3fKiX460+YmsJis/z
      ViSVUF0dXlVGdKg4sTDJsrHuovdEEw5JRBLFrT3TWZbnDbqPN+OURERZKq0B5KIsaNV013uR
      RIlQRxvyepQ0IMleamu9SKKA4goQqvYhiwIOVd324ovNm8MLBeBwONG0x6bUCkVMpxPl63/k
      hV0pskWxoKFrOrrloPf4EQKqjPkSL5DTV0vv2QtUJyYYmt/k5epUK8hKjtwzo2QBMDDNp5Qm
      KaimibF1WDBNDEl686bKbHaMFwugpQf34m2GZpaJRJa4fWUEf28HL23svdUYq9MsRCKsJYo0
      dx1Ci6eQ3R68bhXTspCcXlqUDLcn5liJRFhciTyT4fkhso/+8ydJTtxkJpp9iTBkhbbueiav
      XWNsappbI5Nk8hrgpLFJZfTWCEurEeYXI2SKOih1dNWnuDk4zcpqhOE7k/ha6nk6aaJN5SB9
      +umnn0Ip45pWeHLhRpC91Pot1tdiZLJpdHcLZ440lFwVScLt9uJxqQgIyIoDf5UPVZJxe/34
      vU4EZwCPGWNtM4Wh+Ag3NFItplnZSJBOZxFcfkLVVQRDVaTXIsQzOTTBTVNzHdVez8M8/4Ik
      4/T48TslZIeHoE8mj5sqnwuH20fQ70IQZVweH16XAogoiotAlRePP0S1qrGZLFBX5WAp56K/
      vQ53VS1GYpVYKksBJ40NDYSqvfiDIYqbK8TSWQxXiONdzThkEUlx4K/yo0LpXgMBXKoMkvLw
      2h4+N1Hi4r0VNhK5Pfo12rwqLxELZG0lo+WJ8kQvy4NEtg9/1rIo/SM8USLpUR/saGKl+MoM
      63kJh2yxMTdJJnSC93vqnro28bFFt9J1PHHN20SUFf6fz8aYi5QhtmrrGZeFB4mpytG/IADW
      drOiVH4wXDa2zMTMMkVTwBGop6e9Aae8u1uh7WC4/RMM91wBiKoDUbKHfq+MIGDkc7YA9pKd
      jAYVBAFBPFgJI2wOJvZnfpf4Zz8Z5v5SrNyXYfNbqCwBJOb42V/fIJXXkVQ/xy68w+GGwHMX
      1rbd9NhFLsab+BtvdbzUOkgqpxFLlylNuc1LU1l+zvJNfj2vcvr0aQ6HLP7s//xDfjkS2ZGm
      ZW8N4Wp3hT0wm8qyAKaB7G+lu7sburtoEZb5o1tLfPdYPUujgyjtJ6lzQmF9kuG4jzPdYWJT
      A/z//+FzMkINb33yA97qCROfus5f/uwiMdPL2W/9Lh8dbwBRQHE4kTBJr4zzkzjh8RcAAAyB
      SURBVP/0K2Y3ddrOfIsff7v/9SNSbcpChX7QLLRcksn5KDWBUoXHoV/9BRNbGxlS9y/y519M
      gDbNn/5ff0XP9/6A//J77yKkVklGV/m3/+7nHHrvR/zN779NIVYKzNu8+wv+/bUlwCCe0eh9
      53v83T/4EZ6Jf8P/d3GtTPdp87pUlgUApi/+Of9o8adkDInq6i5+/3faANC1wsP4IcvQKWgG
      WDKiucnk5DK97/Xx7mE3WiqCldtkem6FEx+d5zudjq2f0bZqGCs0t3dRHL7NwMAyMU1neXYF
      3q8r0x3bvA4VZwEa+z7mD37vQ8T1KIfeeY/mgOvrT1ab+a/+3v/AMXGWf/l//H3+6P/9jIwS
      5O/8d/8Lxzwr/N9/+Pf4w3/1GY8HNFjFJP/xX/0TfjFR4HhfH0e7m2z3Zx9TcQJwBkK0Hf0G
      /9P//LeY/Pf/kr+6VxoEW2aGTMYESycWi1HUDChkKbjrefeTv83/9r/+j0jLV1mO5jGVAG9/
      +2/y9//hf4/r2lVmHmtfz2dZyYp89MH7HO5ux2Npdp3gfUxluUDOKppqSj5/1aFz/Lf/jcif
      /Nm/ZTD8X9N7oZ8//qefcjNgYRTShI77gBS/+hf/gtGCB5cWw3v0+zR6C/zqT/4xQ+kAjnwU
      50c/pgvYDIRpFJ3Ibj9H6hX+9I//CLek46tz0dT2Aitj80bz3FAIyeFElF8t6v+NxTIp5HPo
      goLH+chpsSyTQi6LIah4XA+OG+QzeUxJwelQeTZflkk+m8OSHDgd8nPrEv7vf3rZzgqxDzg4
      Athj1tZjFAp7H5NTzlggQRRBEMtUJ1gGw8TaiTrBpq6XJb9jpSCIEjVeB5Z77z3MkgDK5NlW
      SjCcZehYZaq0WQnY1nP/UFmD4DeIL+6tsB57UQqxXUKUwSxPduiy1gkWt1IjbmNHzEcnGitE
      AKZOOpNFf3ynvCDidLlxvmS6Qy2fIqM7qHpOOvRX4fJIxB4Ev+Gc7AhWiACMHEvzc6SKOutz
      4wihHoI+lcaWDhqrX26KMr1xn+FoE+/3h3f5Ym3eJCpDALKX7iNHsYA7G+NInX0cD5VmJbRC
      HkFxIotg6kUKpohLlUvHZYVCNo0pu54wnJZRJKcJuJwKppYnkUxjIOH1B3BKFoWChuJwIIkC
      lmlQKGqoDudzpktt3nQqYyVYKGWpkCQJURQQxa0/CwLzQzdY2QrLz6+O89VYaWV4YWiAO2P3
      uDxwm7mNzEMBWKbGwv0R7q/EscwsE7cGuDY0yr3hYW6NTJLOZblz+ybrW7lKi5kIt25PkrMn
      zfYllSGAF5DPpB5mkjOLWZLZ0hx5cn2ByTWdk+fforepCpHSy7++MMFMXKGjqYbi6jSTxVo+
      ePcd3nvrFHJihbWMQdBhMrWyCVgk5u9TqGrEZacG3ZdUhgv0CiiuKk6eOkWdf8tvMTVWZwdZ
      GhP58Pc+wacKrMdT5DMFRoeHAINEqojbhN7ORu5dWSDT4WB83uTIxzWV/yWpUA6AAExMs5Qv
      xjDMh+skgiAhPb5XUpCoru/hkHuN8eFpqk624/I4UN0e2trbkIH2Ngunz4ssezjsG+PmLYF8
      XTthO3XcvqXiP1wuj8DYzUFuD97i9sQiBf1rnHVBxOH203nsDA0scn1oDke4nbC+yp2xKWZn
      pxiZXCBTNEBQaO09zPTwfRoaqiv/IVYwFWcBes5/Bx6b+Ww9/j7OaBJTlGltPUS/o5TZtOPM
      uwiPneerO8KpWgVBlunuO0993kJSXZx++wLReBrTEmlwuqhyllZ5ZUcVLW1hGqp8e3l7NjtM
      xWeG23kMNpdnGRmfQmk8zdme4DN1gkVZ4fO7i6xtlmElWJLLE4sDW0Xy2FqR3WNEqbQCvY1Y
      oG/2N9kC2D4W+UySZEbHX1uD8zk5V0RZKeUdPWCZ4coaDSoppee9E9GgNi9CwOkJ4PS8+CxR
      lrHMvR8diJKEaZUnGK8kAAFrz8p7Pta3JIEpbLtYiS2AXcLUtPJYAFHELJsFkEr9l6FOsYiK
      qevbtgD2BIbNgcYWwC5gYbHtRPU71XdZ65VZW/dejq5frV/bBdoFLL1MszCAWSxfPlLLNMsz
      AwSv7HbZFsDmQGMLwOZAYwvA5kBjjwF2FYvU+jyj0xFkfwNHe1pxilDMJlhZi1PT1IbvwZS9
      ZZLcWGa14KK7ufbFzWo5llYipPOlsYbs8tJY34Csp1iOrFPd1IH/sZ2d6egSyxmV7pbgaxUg
      1HIJ5lYzHGqpR5ZK305LzzA5OsF6Dlq7e2mqdiKYGtG1CBmpipaQ72HeJL2QYXlpFW9DKzWu
      bbx6lkkuuc5SSqGrueZBa2wsLRJ9UFNXctHUUo9X1FhcXsdRFSbod2z1bZFPRols5gk1N+N5
      rGvbAuwaFrm1aS7emiVQ34CSmOSrO3MULcisLjFyb4Db0/GHcyamoTFx5yJfDM7/1pb11Cq3
      p1Zxupylf9VS8q5sdJWJ4Stcux/j0VDUZHLwS35ze/bVizeaOrHFEX7xs1/yk6sjFI1SQ5aR
      Y/TaVZZ0D40hJyMDl5lP6FhGlpH749wbGCSqPeo0vjbFjUvXmE48U7n8BTdbYPreAL/8xS/5
      fHjp0XErw8TtSQoPnoFTRRIEKG4wcHuE0ZEp8lt7xC2zyMzEBHdvXmP1qTkCWwC7haUzM7dM
      Y89xetpaOXr6PEpsgo2UgWmYuJraMBYnSG1NGBnZRTaLQfyu3/aFtsikMzgCQdpaWmhraaEp
      XItDBsu0cLR2IsyPkHgwEZVfYCUbpMb7Gr9qLcdq1sGHH71LS7Xj4QxvIb7BnObj/PEuDrX3
      cqzdx/zsMqZloQkBGmsyLC4/2G1nsrEQwRcObm/KMhcj7Wzjkw9O4lQfu4d8nE0lyOGtZ9DW
      VIdLkcAykJzVSPomyXTpIRj5HNGcSY1HRX+qa1sAu4VhkDNMqrylXKWipOL2OCjmS18/Wa0l
      4M6ymcgDJtGZWfxdXThfwkPJ5TUUq0A0uslmIklBMx7Nvku1hKtzrEezWFhEJ6fxHu7B/TrR
      CQ4fRw534lefDPvL5XJ4vT6UrbKzXn8Qq5hgy0BQU9dMOrqMblpYxQhL2SBttdvcPOGrp6+r
      EcdTG67NVIaCQySzGSUaT5IraA/XQCSHi7BTYjVVCkbMZSJYaj3+52zbswWwi4iiiCiVHrog
      CEiKgrBllgVJIVztZzUaAy3G2JqX3mbnc/OMPo2vLkxQ0pievs+NgYt89tVdEoVHTk9dXR0b
      6+ugJbi34uB4y8u1u10sC2T5UW5USVIRxUebjgLVtRjZONmiQWJ6HvlQO94d2jpqecIcCcLs
      7DSD17/i559fYy27NR4QFNraqliai6Jjsjm7hK+9DfU5D8EeBO8aAoZuoBWLgIplmhRzOUxJ
      fPj34boqbt+LkvTImKE6Ai/1lgp4qho4frIBKPm3A5//iuVoN41bZ9TUVhNb2CC9aaBV11K1
      S+kqRBFy+TymZYEgoBXT6IbMg3G26ApQL02ykIhRiEJXnxtSO9O35Knl2PHSZIFlFhi5/CWz
      G2nCwdLfK7Ut1A5eZznlYyZZxemgwvLz7mFnLsfmGSSZkEdlbjWKBRSz62ymJXw+58NT5Jom
      OvRlLs0naApVv1y7lkUyukpiawYIy0A3BJTHEoDJgTDdbHJ5bp262uAO3tSTePx+tPgG8bwB
      GKwuL+AMhJEf6E1Q6Dpcw+StSdIONzWunSolYpKKRYlvJTjANCkaAg75sddZ9NLZ6WLor4cR
      W1rwf82bbluA3UIQaeo+zNKlq/xsfRojlab17DeodogkJQkFCXDQ1hng5q0CZ/v9IBRQ1d/+
      KymmVhn4agDB6aWYiRNoP0tLjZPCikRJByrtPTVcvRTlRG8VghB7qXa/jnxijevXrrKWzLMc
      zfCTn23ibejhW2c7OdPh44vPPsPvMsgpTXzYX4MopFAUueT2VbcTKPwM2fsuDklAlBXkbVik
      xOIol+7cJ59JEk0K/EVqivojF+ivznJz4AoZ0YmQzyDWdPJ+yAd6CnXrY+AOtpDLXKO3thS7
      LinqMyVz7Q0xu4xlmRQLRQRZRZV3zuBalkExryEoCqpc3pwshlakaIJTVV5rnWG7WJaJVixi
      CjLOVxS4LQCbA409BrA50NgCsDnQ2AKwOdDYArA50NgCsDnQ2AKwOdDYArA50NgCsDnQ2AKw
      OdDYArA50NgCsDnQ2AKwOdDYArA50NgCsDnQ2AKwOdDYArA50NgCsDnQ2AKwOdDYArA50NgC
      sDnQ2AKwOdDYArA50PxnSlasttYbcYoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Color-coded world map showing total cases per country (latest data).' width='192'>
      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
      /wNzHnFRhM1kkQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Daily New Cases' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global Mortality Rate Yearly Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Trend Line ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAehklEQVR4nO2d2Xcc152Yv1tb7w10gyBWgiAIggQ3iasoi9o3a7Miyx5bHtmxMzMPdnIy
      ycnTnHnKQ/IXOCczHiexjyVZY0m2LMuWZFmiVlLiKu4kQBIEQOxAA43eu7Y8NAiKElcNGyC6
      7veAAxar6twu9Fe36v7u73eF67ouEokHEUIIDUA6IPEq2vlfzLG++WyHRDIvKPPdAIlkPpEC
      SDyNFEDiabSr7yK5ObHoPnyIU6PTROIN3LJ6OWGfhrhoH5dMOoPhD6Jr8l53KeRVWbAU+fid
      P9M1kqH32C7+x0+fZzznYFtFMpkMuXwe28rwy5//nAM94xQtG8e2mJ6eJp0ryJG/GWQPsIBR
      jCC3b7+XrUt0fvd/f8anp4ZpHNvN+z0pAqLIfXes51BXD4PWb8k/9iRu17vsGYNiMsmjzzzL
      rY3R+f4I847sASoBoVFbFWQ6n6d9/RY6G2vQ4ovR6taxcfUK/uq73+OupS4fHBtlwy23srZJ
      Zfehgflu9U2BFGAh47pYpkl6cph9/VOsrA3w0ouvElq+kdu3dAACRbhYto3jgpVPc25wCCXW
      xqaO2vlu/U2BfARasAh0TF5+/l94DYdN9z/JhpYYZ0OCnTv+QqQuxmP3dbB2WQ2vvPRr0o8/
      xcO3dfDu6V7SfheldtV8f4CbAuGWkJHgCsF1HIqWha4bKALApVg0UTUdVRFYZhFHqBiaOt9N
      nXd8da1iwfUALmL2p+TLCEXBZxif34LxuX9ruvHlgzzMgnsHcHX/fDdBUkEsOAEkkhuJFEDi
      aaQAEk+z4F6CKxOXfLKPf/rVJ/zdf/oOamqc997dQddono133Msdq5sRuEwNHeeFN8/wox89
      TmDmSMfMs2vHG3xyepo7H/w6W9oXU8ym6Bnsoan9FiJWgf27P+KTo2cJ1bbx6IN3UBsqvQjb
      xQwfvfs2B3sTrNiwnQc2rWDy3HHefH8PWbWaR77+II1Bm10fvMuBngQrN2/nwU3tqKJyhiBk
      D3AT4Domb/zuLXpHh8kDE0PnqFt7Nz/+wRPsf/0PjAN2IcVbb7xPz8Awxc8dO3DyU45m6vjJ
      sw+z/89vMFLIs2vHexwc7yMPYBfxL+7gb370Q26LJXlz39nZY8/u/YAzeis//g/PMH7wPbon
      MvQOjPPgk9/h2QcaefHlnSTGBjGWbOA//t1fc+69P9JXtOf02pQb2QPMN65L34Ed5FvvpGPi
      XQCaOm6l0XUY6T1MIVxDxLU5tvsDwqu305Lae9HhYwP9dN76LQIRPxtaNc6OCO557BuM0VXa
      wRdheZNLf88pjgykaNsSmz12UXMTuffPcPS4w7QSJR40WP21u3CsPPv39VC/bB21LSupA5Kj
      Z5hQo8SUyrpnVtanWYBY2SF+8dZptnVEmEqnGEukcB2TA+//kRffO82z338Kc6Sb1/dPsqbR
      TzKVYiKZmT3ecVx0XQfAMAxs+8t36EJmiuOHDjGYcvHpF/7kluUSMFz6+kfxB3w4jksxm+Dl
      F56ny2nnmftXoeDQvfddfv7bnXzr+89QpVfWV0b2APOMnc2zfmMnZ7pOMzoxQe/gBNG+bt4b
      i/Of//0daAKmplzWdC7h9KkzjE6McW5kitawgekIwlVRjvT14TY0cKp/ivWbLo6T2JaJEW3g
      iae/Tfbsbv7Xp8fYuOR2ijYcOXiY1lsf4J6Vdez63XMcHpoiv+f31G15grtWNSAEpHp28/Lh
      Iv/lb79HoAJzChbcVAhHDyDMXOVFgh2Lf33uZR7+wbfZ+6uf8l4iTK0f/MFGvvv9R6gCMNO8
      8Ju/8MRfP8m5D/9IT3QD97epPP/C73EMH1rDOr5/Tzuv/eGPdCdGQGvkke0b2PfhDuxAjNTU
      FFseeorFU/s57qzk7iU5fvnbD4lUh5jIGvzg2Xv4f//zp6hNLegKLF1zO03Te/jtsRz1ER2o
      4pm/eYrFFTKNwlfXKqQACxDXyvDHNz5i+8MPUW0IHMfGNG0Mn3HJ6+I6DoViEU030FSXd//0
      JqvufIjGiI7r2BRMG8PQUSpodOdakAIsUFzXxXFcVPWrPJK42PZXPbayWJCT4SQghEBVv+ot
      4N9ybOUhbwMVSDJr8qsPe/m0ewJH5v5eEdkDVCB7ziR4bd8gLTVBOpujRAP6fDfppkX2ABVI
      XdRPwFBZFDXwVeDQ5Y1EXp0KZHVzlGW1IVY3VeHTK2PIslxIASoQVREoCiSzxavv7HGkABVM
      Ii0FuBpSgApmMmtiO3IU6EpIASqYbMEib1bW9OUbjRSggskVbXIVNn//RiMFqGCyRZu8FOCK
      SAEqmFzBJisFuCJSgArGclxSOXO+m3FTIwWocBIZKcCVkAJUOIl0Yb6bcFNTRgFcpsZHGEuV
      /gDFXIqT3acZnMzgArg2w+f6OHF2iKLtADZjoxMUbGf2DJMTo6QKziXPLrk2JlIyGHYlyiZA
      IZVg557P6BpMgJVj72cnUPx+ek4cY3i6wFBvN2cSRbTiOHuOD+KQYd/Huzk6lCqdwJpm90c7
      6RqXf8CvigASmaJcDukKlEUA1zHpOt3PktYlaMIln5zAraqnfUkTnc3VDCVSjExM07FiGe0r
      VqGmh8lZLpG6OlJDg5gOJAYGiDY0gPzjfWWiAZ1MwaZgyV70cpQlH2Bs4CxWpIElvhSns1A0
      IRjUEUDAr2NNu+gopRr1QsVvgG2D0KJE9RTTBZP+RJ7WmiCDM+d09AAgcFWdUnRfinElXKES
      i/jIFh3Sjo6mybLol+LGC+AU6B+cIKvnOTI9yrAZYcmqRaTSDi6QzRVRlRCOY1E0bdAcMnkH
      ZWbWbmttmDMDAxSIEvLlZ0+rmLnS6QmgWN7OCb4WhGuzKKxzeiSNmc2g+WQvcCluvADCYMOW
      rbguJAZ9+DIh6hvj9J87yMEui8nRSVbf0opQYxw5dpK4nkPEmgjOCBBpaGbstXdovuNe1MLZ
      G948LxEPGxzus8nJ+UCXpQwCiNnyGvGGVjY4CoqqsXHDeibTOZY2NlAdMiDUzi2RaYqOYFV1
      FEW4bFgfQFUM7nzgHoxgENVpZw0yne+rUhXUMW2HTF4KcDnKmhOsagbn85F0f5DF/uCF/xQq
      sVjsov0D/tLeoXC4tEHxIdeD+eqEDBW/oZLIyJG0yyEDYRVMwNAI6KpMjLkCUoAKJuBTCRhS
      gCshBahggkZJgIm0DIZdDilABaMqgqqgTipnYtpSgEshBahw4mGDbMGWqZGXQQpQ4cRDBtmi
      zA2+HFKACqcmYpAp2OSLMhJ8KaQAFU4sZFAwbbJFa76bclMiBahwQj4NQ1OYlJlhl0QKUOEE
      fSp+XZWZYZdBClDhBIzzwTDZA1wKKUCFE5yZDzQho8GXRApQ4RiaQtinkcwWZZ3QSyAFqHCE
      ENREZDDsckgBPEA8bJApWLJM4iWQAniAkgA2eVMGw76IFMADlKZDyEegSyEF8AARv4YqSsun
      Si5GCuABgj5NDoVeBimABwj6VJkaeRmkAB7gwnSIoiy09wWkAB4goKsEfSqTsk7ol5ACeAAh
      BLGQQSZvyTqhX0AK4BFqZoJhBTkUehFSAI8gg2GXpiyV4QqZJMe6TpMsKqzo6KCxOsBwfw/D
      qSICjZa2FqoNlxNHjzFS9LFpXQdRn8PJE+doaGshamiAS++pk/jr2qmLlLWAnSeIyx7gkpSl
      B8jl8rR0rGH7rcvpPnyElG3Sf26SluVtdLa3UOXTOXvyGFb1Ura2hdhzsAfLzdF38iSH+qZw
      ATc/zpEjXfQlZfDmRlAVKJWVT+VlauTnKcuttbpmMYVCnkQigQhE8Dk5MuhQLGDpBrqAqaxJ
      2/IYIV81UbGXnLmYUH0L9sQAhWU1JPpGaGpr4vz9yp0piO4KgRCKHM24KgKEmL1uQb+OX1dI
      ZMzZbZJyFcd1TfrO9tA7OklV3VJUJUB7czUjg4MMDI7Sum4DQigoCoBAU5XS+LTwEQ9YTGYL
      DKZNWmM+es+fUvOVflE0HEVWjL4qQuAoOo5aWhjDH7Tx6xrjGXt2m6QsArjYrkr7ytWsWOlw
      YM8njGTqaGhqollVqQ/ByakMAdcik7OIKCbTWYE205JljdV8dvoUrlGLX0/OnlWxSotlOEIg
      7IK8h10N10Gxi6h2KRc4ojn4dYXJ6ezsNklZBHDo7TrG2SmTgO6QE9UsV7Ls3XsCSzVIpwvc
      umkZ4ViRnQcP0IVJrLWTgCowdA1fTRP5T/7C0u3tKNksuvyq3xBKqZHKTDTYRQh5XaEsAqi0
      da5jqWVhu6DrGgLYtnUrpmWhalppAY3IEh74WgO2K9A0FQFs3hAF4L7Hvl46VVUH6298Az2J
      qgiqgwbpvEXRcvHpUgAoYxxA1TSMmS8/AEKg6/rs6jEAiqqhz3z5JeVndijUkkOh55GBMA9R
      Ey71AAUZDJtFCuAhZA/wZaQAHqI6pFO0HLIFKcB5pAAeolQnVCbGfB4pgIcI+bRSNFgKMIsU
      wEOEfCo+XZG5wZ9DCuAhSj2AOhsMk0gBPIWmKkQCOtM5E0vWCQWkAJ5CiAuxgKKMBQBSAM9x
      IRYgBQApgOeYjQbLYBggBfAcsZBBrihXjTyPFMBjhAMamqowmZFDoSAF8Bwhn4ZPBsNmkQJ4
      jLBPxSenQ8wiBfAYIb82Gw2WsTApgOfwzS6aZ+JIA6QAXkMIQfx8MEzGAqQAXiQeNkhJAQAp
      gCcp9QCmDIYhBfAk8VCpUK7MDZYCeJJoQEMImJaL5kkBvEjYr+HTZGIMSAE8SWhGABkMkwJ4
      krBfw5CrRgJlqg49NXqOIz1DFC2XmvoW1rYtZvDMSU6cS+CrXszWNe2IwiR7Dp4kYyt0rllH
      Sxx2vn+E1o230BjxARYHdu0k3LGNFTWymvGNJGCUlk2dzBRxXPeian1eoyw9QCASZ/PGjdxz
      23oyw30kpxN0J+Cu7dto0nKcHZ/mzOkeGjvWc9/mds6cPEPBMSnmM3T3TeAAZnKIkWSBZE4O
      1d1oFCGIhXVSeQvT47GAsvQAPp9Of38fI4kkRk0DSi5HNF6NT1WpXxThaLqIVnRojAbRjSAR
      /QwFC4zqRsiOkDfrGTo3SdvSRaRmznm+pr2raLiqgZzIchWEgqvq2JdZSyEWCdA9OE3e1dAU
      7y5BVZ5PLhSi0SpyhTzD0ymKkfDF/+/O/vj8BhAq9WGN4XSGiZxLe60xK4BwbBDguk7pd8mV
      cV2EYyPcS9/ha8I6B/ImpmkifN59FSzL+gDZbJFwdZyq6ipSuz+lqNeQPDdOcVk9w+NJIvE4
      blowMZ0jFMqRLAbwzbSkuWUxO/cext+0Ap86OntW4drggnAdhGvLitJXxS0tkuFe+mZRE9JJ
      50zMooniyh7ghjI52s/JwWkMzSUQX0r9olpEepJP9uxH9VexeXEUpaqdPYeP0+/Ais5ODAUW
      xcNooVqqA/00NFaj5QvEUcvRRM9TFdSxXUh7fNG8Mgig0LSsg8alDi4gFAUBNC1bSUNraWUS
      IQQEY9y+dQOuKxCKQAAd7UEAbt26uXSqYDPLbnwDJcwMhaoKCY+nRpat7zv/xb+wQXxpuE0I
      BQ+PwM0rEZ+GIcskykCYVwn7NQwZDZYCeJXPT4fwcp1QKYBHUYSgOqiTyplYthRA4jGEKCXG
      TOctirZ3o8FSAA8Tjxikc96eDiEF8DA1IV8pN1j2ABIvUh3SKZg2OQ8vmicF8DCRgIbu8WCY
      FMDDRPwausdjAVIADxP26xgezw2WAniYyOeiwV4NhkkBPIymCiKBUp1Q26OL5kkBPIwQgpqQ
      QSpnYXo0GiwF8DjxiI9U3sT0aCxACuBxasIG0x6OBksBPE4spJP18LKpUgCPEw3oqIpgMuPN
      OqFSAI/j9WCYFMDjhAMzucHpwnw3ZV6QAniciF9H184vmue9oVApgMfx6wpBn8pUxpurRkoB
      PM75YNh0zvJkLEAKICEe8W40WAogKeUG57wZDS5LYSzXdbEtC8tx0fXSOLNtWzMTrgSapqIA
      pmViuwKfXlqzyrJsFFWdLaBlWxYoKqoiq2eVk3jI8Gyp9LIIkBzpZd/pUXyawNaq2LahneN7
      d5P1x/CrGq3Ll6JlRvjkSD+KsFm8bC3rWjTefn0Xy+/cTkdNENwCH7z1JrGND3Nrg78czZTM
      UBUslVCfzpksrvLWtS6LAJF4E3fXtaK6Fnt37yaVbyJjR9i4fhV+Si9eB48PccvmLdQFLT78
      5AT5pjYisTADvSMsjy+jONqPE4pje/C5dK6J+HV0VXgyGFYWAVRDxzZzHD16DKd6KXHNxnJz
      HNi7H0sJsXHdCmxHEPDpoOiE/RamBUpgMSESZIot9A9nWNEUZWzmnI4eAASuquN8aX0ByRdx
      hYqj+bC0q9/RQxEXXVMZy7nXtH8lURYBrHyKT/YdYVFbJ1sbqhHA3XdsBWCo+xBH+xNorlN6
      J3BdTNOZLZLbHA1wbnKSlKnR5GdWAMXMAeAQQLFycn2AqyBcG8UqoFn5q+5brdsYqmAymUE1
      854qWFyWUaC+0yfx1S2jKaqTyebJZdIMjI6TzubIFGz8hkYsZNA/PM7UWD9pJU5gZiWfxUsb
      Gdi/H62uGd1Df4j5JOhT8ekKk+kirsd61rL0AKFonPGJcU50j6MFQqxa1kwxOcCxoWGM4CJW
      N1WjO50c7+qhe1pl07o2NOHQ1lqLolexsrODWH0Yo9BAi7j0GleSG4ciBLGZYJhtuyiad+48
      ZRGgbkkbdUsu3rZsxcqLF7tQ/Kxe3XnRPvWLSwvhtSxrLW3Q49SWo4GSL1ETNjiXyGHaDrrm
      nfCQdz6p5IqcD4ZZHkuOlwJIAIiHfZ5MjZQCSACoDupYtkPGY3VCpQASAKIBDU31XmaYFEAC
      QCRQigZ7rUyiFEAClHoA3YOpkVIACXChUG4i463USCmABCjVCa0K6p6rEyoFkMwSDxtMZ70V
      C7hOAVzMQp7E5DRFs0jRY2PGlU5N2CCZszy1bOp1TYVIjpzmuZffZHg6wveeuYUTfT6euqvz
      6gdKFgSzPYCHUiOvowdwOPLpTpbf+022tcTQAiHO9feVr2WSOScWMsiZNjnTO8Gw6+gBBA1N
      DXy86yP8UxP0/3mUUMO28rVMMudEAzqaIphMmzRUB+a7OXPCdQnQeus9POk7Qv9EI4HoIm5d
      21G+lknmnGjwfDTYO7GA63oHGD97lPf3HwfAdc+SIcBDG5aWpWGSuSca0NFUwUTaO5Wir0uA
      ULyBLRtKCSoTfUc4MzQFUoCKoTQd4sKiecIDuZHXJYBmBKiJVQOgFmrYe2S0LI2SzA+GqhDx
      a0xlizguqJX//b8+ASZ6j/L82wcAcBzB1geeKEuj5gvHKtLbc5pEXmHFiuVE/RrpxBDHzoyw
      pL2DhuogrlWg6+RJ8kaM1cub0T9XtCuXmuDkqX588UY6WmoZH+hlKlcaUVH9Edqaa0mPD3Ci
      b4za5uW0Lo6U7rKuS2J0kLHpUgK7ovpZ2taIm57i+Kle9Ko6Vi1dTGJkcHa2pmaEaFlaz41M
      GBWiNBR6PhrshYJk1xUIa1x9O//w9z/hH/7+J/zjf/0xD65rLle75oUjn77D7u4RUuNneO6V
      HaRTg7zwyltMTid4+aXfM5yx2Pfea+zsGqP707/w5sH+CwcXxnj19R1MZAsc3vF73uueJJdN
      kZyeJjk5yC9+8waFqdP87xfeoWCavPXrX3AseWG8vZDPkJyeZmpynBee/x3JYp7XX/8DY+ki
      p/a9zZv7zpHLlvZJjPbz65ffIleGazCbGeaRWMA19QCFzCj/52e/YvALFTbWbn+c7965shzt
      mhdWbXmAdYZOIdnDoWP7OHvmNPFVW3j4zjXEnFfp7j9Lz5kij//wPmqsXv7pxWPkN7TgB9Bi
      PP1X38RQBccypzg0XeD+zetoBbo+fJl1d9yHkR1C1LWzddMGRN8eRqdhTTUgBA1LO2hY6pI4
      vZO9q7eySPfzjaefQddUTn02xs6RLC1bOmnBpWf/27TesploGa5BzUwP4JXpENfUA+j+GE99
      57v86FuPsKp5EZFwiEg4RMBQy92+OUXYGV576UU+PWvy756+H9UsEA2GAIgEwuSsKUw3TEAX
      KIEofjPL7HiJqjHVe5CfvfAmatvXeHR9KZ2/OHGct89EeWxzE0U9gDM9CcB40iFoXDz33son
      eGlHD999ZDNCwPRQF//8q1dxY2t5/K7SkHNmoo93jmd5Ynt5IvB1VX4yBZt03irL+W82rkkA
      RdVpaGwiP3icISsCRpjNy2tIZyvpIjns2/EnnJat3Lm+g5b6GIuiEc72D2C7FmcHBoiFWwgo
      owxNFkifO0MqsoiAa5NO53DyI7z4p0M8+th9rGxfRtQoda7vvPkx2x76GmFNIdF1iNiqjRia
      zh1ra/j0eAKrkCVbdMB1OfnxWyze9DA1QQUrP82Lf/iIx558lBWtS4kHVXBtDu78kLbNd1Pl
      L888xuqQjiLwTGLMdb0EF4oWa9ZvZrjrECs6V3B0Vx+wqkxNm2uKDAwm6OrZQd9nO4jXr+Lp
      xzbSevRV/uWXp/DXtHNvcy0t92zk5d/9K44DDz/xTbI9+3nhM5Nnt0UYSyV45cXnANh6/1Pc
      vkwhFVzGfYtLvUjD5kfwP/cbftEXYywj+OH363n3tz8jdvffsrlOcCIZ4tF7Sz2HaU0yMZLg
      lRefB1Q23v0QX2sNMUQdj6+Ile0qVAX0UjAs5Q0BhFsCc+zq83qSg90cSwYITRzhrYP9rNx6
      H9/YsnwOmnkBRw8gzLkrjei6DpbloGoXl213hYKmKhze8yGBlg2014Wv8YQORdNG0zUEFn94
      4wMee/R+bvTD5H9/5ShPb21m7ZKq6zpuMlPkvz13kCc2NPLU1qYb3KqbC19dq7i2HsA2OX7i
      OGqkns0ra9FEE2tud1DUynoHuBRCKOj6xY8bqnbhsq3ZdAdCXMfjiFAwjNL+rqvx+Nfvu6mS
      MiL+0qqREx4Jhl2bAEJgpsZ5471d5Io2Le2drO9sZ1VrE75LVBHLJsc43NVHpmgTr1vC2uV1
      DPd0cbx/An91HVvWLEcUJtl7sIu0rdC5Zi0tcdj5wVFaN66nMewDLA7s2kWk4zbaa4wb/LFv
      HIpy9a/v5b5IQoibrhCtpiozmWHeCIZdmwCKxvpt97Fu611MToxztucUrz73z2grv84/PrP9
      S7sLdNpXryXmV9jz6R4ScZ2ucYe7tm/j3IkjnB1P4Y720LBiHUvCeT7+rIe625op5lJ0905Q
      v6YRJznESDKPnVu4U3Ntx+WlT/o5NjDNt28rPY4shDtqPGyQzJlYjoOqVHYvf20CuC75TJIT
      Xd0cOXaMnrEM8da13LZ5xSV3D1RVE3BtBnvPkPfVoBVzRGti+FSV+kVRjqYLaEWHxqoguhEk
      op+hYIFR3QTZEfJmA0PnJlm2dBHpmXM6aqkXcBUNVzVYCGt6Didz/OmzYXJFm9cPjLCqZRHK
      XEVXhYKraNjK9ceKY5EAA5OTmOhoUgDAKvDOW69zJhVg27a7eLhhMTXR4OxL4RdxrQJHjx4l
      rddw2/pmzMTgF3aY/fH5DSBU6sIaw+k0EzmX9lpjVgDhlnoC13UQzsLoFWJBleZ4gO7hNE1x
      PwoOwp0jAVwXgYtwrz+iWxMuJcc7tjV37Z0nrk0AzceDT3wH3dCvafRlqP8UuUADW1bUowqB
      Fg6QPDtCcVk9w+NJIvE4TlqQmM4RCuVJFgP4ZlqypKWWnfsO42tYgU+9MNnu/JdeuA7CtRfE
      AhlBXfC1jhq6h9P4NQXFtRFzN34Fjo3iXv/NIhbUyBUtCgWTqO9mekW/8VzzS7BhXHtXms/l
      GR/v5f2xPoxglA1rV7Jy0Tif7NmP6q9i0+IISnQ5e48cp8+BFZ2dGArUxMOoocVU+ftpbKpG
      yxWIiYXdBZ9/5Dk9ml4wL5XVQR1VCCYzRWqjvvluTlkpy/oAbas30faFbaG2lTQuc2dGPgSE
      4ty+tRrXFQildF9c2R4EYMPWLaWDgs1fOs9C5fRIBtNeGC+V0YCO6pEyiXPXvwmBoigXjYII
      oaAoc/dQMJ8ksyYjyauv13UzUBUs5QZ7oVBuZT/g3WScHEovhMGrUqVoRWEiVfllEqUAc0TA
      UOkeSi2IRegMTSE8kxlW4d9/KcBc0V4X4tRwGmcBzLMXQhCPzGSGVbgBUoA5oqMhwuBkjtQC
      mWdfEzaY8kChXCnAHNFeH0YIwanh9NV3vgmIhw2SGSmA5AaxrDaEoSmcHEotiBfLeMgglTcr
      ftE8KcAcETBUWmqCpfeAm//7T1VQRwjBVLayi2RJAeaQjsYIp0fSC6LiQnVQR/VALEAKMId0
      1IcpWA59E9n5bspVqZoRoNKjwVKAOaS9LoSqCE4O3vzvAVWyB5DcaGoiPmrCBl1DN/9IUMBQ
      Cegqk5kizk0u678FKcAcIoRgZUOEruHUTf8iLIQgHjaYypgLInj3Vfn/TLFcx6XmdroAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='67' name='KPIs' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Mortality Rate Trend per Country Over Time (Yearly)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Countries by Cases &amp; Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Cases &amp; Deaths Globally by Date (Time Trend)' width='192'>
      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
      NBkAqab9f6uXDxHLkdRiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccination Progress per Continent' width='192'>
      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
      xDYZ2h7d+QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vaccinations Over Time' width='192'>
      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
      /wN5nbMITaGWlAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
